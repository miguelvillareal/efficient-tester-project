{"version":3,"sources":["webpack:///src/app/registration/registration.module.ts","webpack:///src/app/registration/registration.page.scss","webpack:///src/app/registration/registration.page.ts","webpack:///src/app/registration/registration.page.html","webpack:///src/app/registration/registration-routing.module.ts"],"names":["RegistrationPageModule","imports","declarations","RegistrationPage","apiService","router","authService","registerCredentials","username","firstName","lastName","email","password","passwordbis","showError","length","networkConnected","showLoading","queryPath","findUser","subscribe","listUser","stopLoading","console","log","JSON","stringify","nbUserFound","userToCreate","createUser","resultat","queryPathTwo","id","setUserInfo","infoUser","myUser","labgroupToCreate","createLabGroups","res","currentGroup","userID","groupMembershipToCreate","createLabGroupMembership","selector","template","routes","path","component","RegistrationPageRoutingModule","forChild","exports"],"mappings":"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","file":"registration-registration-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPageRoutingModule } from './registration-routing.module';\n\nimport { RegistrationPage } from './registration.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistrationPageRoutingModule\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RyYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n//import { Platform } from '@ionic/angular';\nimport { ApiDjangoService } from '../services/api-django.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit {\n  registerCredentials = { username: '', firstName: '', lastName: '', email: '', password: '', passwordbis: '' };\n\n  constructor(public apiService: ApiDjangoService,\n    public router: Router,\n    public authService: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n  \n\n\n\n  register() {\n\n    if (this.registerCredentials.password != this.registerCredentials.passwordbis) {\n      this.apiService.showError(\"Sorry passwords doesn't match\");\n    }\n    else if(this.registerCredentials.password.length < 8 ){\n      this.apiService.showError(\"Password has to be 8 or more characters\");\n    }\n    else if (this.registerCredentials.username.length == 0 && this.registerCredentials.email.length == 0) {\n      this.apiService.showError(\"Please enter your email and username\");\n    }\n    else {\n      \n      if (this.apiService.networkConnected) {\n        this.apiService.showLoading();\n\n        // Check email\n        let queryPath = '?email=' + this.registerCredentials.email;\n        this.apiService.findUser(queryPath).subscribe((listUser) => {\n          this.apiService.stopLoading()\n          console.log(JSON.stringify(listUser))\n          if (listUser) {\n            let nbUserFound = listUser[\"count\"]\n            if (nbUserFound==0){\n              let userToCreate = {\n                \"email\": this.registerCredentials.email,\n                \"username\": this.registerCredentials.username,\n                \"firstName\": this.registerCredentials.firstName,\n                \"lastName\": this.registerCredentials.lastName,\n                \"password\": this.registerCredentials.password,\n                \"is_active\": true,\n                \"is_staff\": false\n              }\n  \n              this.apiService.createUser(userToCreate).subscribe((resultat) => {\n                if (resultat) {\n                  let queryPath = \"?email=\" + userToCreate.email;\n                  this.apiService.findUser(queryPath).subscribe((listUser) => { \n                    if(listUser){\n                      //console.log(listUser.password)\n                      //console.log(listUser.id)\n                      let queryPathTwo = resultat.id;\n                      let setUserInfo = {\n                        \"email\": resultat.email,\n                        \"username\": this.registerCredentials.username,\n                        \"firstName\": this.registerCredentials.firstName,\n                        \"lastName\": this.registerCredentials.lastName\n                      }\n                      this.apiService.infoUser(queryPathTwo, setUserInfo).subscribe((myUser) => { \n                        if(myUser){\n                          console.log(myUser);\n                        }\n                      });\n\n                      let labgroupToCreate = {\n                        \"name\": this.registerCredentials.username,\n                        \"group_id\": resultat.id\n                      }\n                \n                      this.apiService.createLabGroups(labgroupToCreate).subscribe((res) => {\n                      if (res) {\n                        console.log(res)\n                        let currentGroup = res.id;\n                        let userID = resultat.id;\n                        \n                        let groupMembershipToCreate = {\n                          \"user\": userID,\n                          \"group\": currentGroup, \n                          \"role\": 1\n                        }\n                        this.apiService.createLabGroupMembership(groupMembershipToCreate).subscribe((res) => {\n                          if (res) {\n                            console.log(res)\n                          }\n                          else {\n                            this.apiService.stopLoading();\n                            this.apiService.showError(\"An error occured while creating a LabGroupMembership\");\n                          }\n              \n              \n                        });   \n                      }\n                      else {\n                        this.apiService.stopLoading();\n                        this.apiService.showError(\"An error occured while creating a Lab Group\");\n                      }\n                      \n                    });\n\n                  }\n                  })\n                  //console.log(resultat)\n\n                }\n                else {\n                  this.apiService.stopLoading();\n                  this.apiService.showError(\"An error occured while registering\")\n                }\n              });\n\n              //Put info about user in their profile\n            }\n            else{\n              this.apiService.showError(\"An account already exists for this email, please login\");\n            }\n           \n          }\n          else {\n            \n            this.apiService.showError(\"An error occured while registering\")\n         \n          }\n        });\n\n      }\n    }\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Registration</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form (ngSubmit)=\\\"register()\\\" #registerForm=\\\"ngForm\\\">\\n    \\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Username</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"username\\\"  [(ngModel)]=\\\"registerCredentials.username\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">First Name</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"firstName\\\"  [(ngModel)]=\\\"registerCredentials.firstName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"lastName\\\"  [(ngModel)]=\\\"registerCredentials.lastName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" name=\\\"email\\\"  [(ngModel)]=\\\"registerCredentials.email\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerCredentials.password\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n      <ion-input type=\\\"password\\\" name=\\\"passwordbis\\\" [(ngModel)]=\\\"registerCredentials.passwordbis\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button [routerLink]=\\\"['/home']\\\" type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\">Sign Up</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistrationPageRoutingModule {}\n"]}