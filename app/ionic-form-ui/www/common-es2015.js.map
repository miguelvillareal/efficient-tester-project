{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","./src/app/protocols/protocols.page.ts","./src/app/protocols/protocols.page.html","./src/app/protocols/protocols.page.scss","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DsC;AACnB;AACpB;AAC0B;AACK;AACN;AACL;AACC;AACH;AAEpD,IAAI,UAAiB,CAAC;IAOhB,aAAa,SAAb,aAAa;IAsBxB,YAAoB,cAA8B,EACxC,GAAa,EACb,UAA4B,EAC5B,eAAgC,EAChC,WAAkC,EAClC,MAAc;QALJ,mBAAc,GAAd,cAAc,CAAgB;QACxC,QAAG,GAAH,GAAG,CAAU;QACb,eAAU,GAAV,UAAU,CAAkB;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAzBjB,aAAQ,GAAY,IAAI,CAAC;QAEhC,wBAAmB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;QAM9E,cAAS,GAAC,EAAE,CAAC;QAEb,UAAK,GAAW,EAAE,CAAC;QAEnB,gBAAW,GAAW,EAAE,CAAC;QAEzB,YAAO,GAAe,EAAE,CAAC;QAElB,qBAAgB,GAAY,IAAI,CAAC;QAWpC,IAAI,CAAC,gBAAgB,GAAG,0EAAS,CAAC;QAEpC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACpC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,4EAAI,CAAC,CAAC;YAElB,IAAI,gBAAgB,GAAG;gBACrB,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI;gBACrC,YAAY,EAAE,4EAAI;gBAClB,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS;gBAChD,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,UAAU;gBAClD,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,OAAO;gBACtD,eAAe,EAAE,IAAI;gBACrB,WAAW,EAAE,6EAAY;aAC1B;YAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjE,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACxB;qBACI;oBACH,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;oBAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,4CAA4C,CAAC;iBACxE;YACH,CAAC,CAAC,CAAC;SACZ;IACH,CAAC;IAED,WAAW,CAAC,QAAQ;QAClB,OAAO,UAAS,CAAC,EAAC,CAAC;YACjB,IAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACzB,OAAO,CAAC,CAAC;iBACP,IAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAC9B,OAAO,CAAC,CAAC,CAAC;YAEb,OAAO,CAAC,CAAC;QACZ,CAAC;IACF,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC3C,CAAC;IAGF,QAAQ,CAAC,IAAU;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,KAAK;QACb,2BAA2B;QAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/C,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,EAAC;gBACjC,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;gBAEzD,IAAG,WAAW,IAAI,6EAAY,EAAC;oBAC3B,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;oBACrD,qBAAqB;oBACrB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;wBACzD,IAAG,QAAQ,EAAC;4BACV,gCAAgC;4BAChC,oCAAoC;4BACpC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;4BAC1D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;yBACnD;oBACH,CAAC,CAAC,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;iBAChD;aACJ;YACD,+BAA+B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IAER,CAAC;CAEF;;YApIQ,+EAAc;YADd,uDAAQ;YAER,6EAAgB;YAFN,8DAAe;YAHzB,6FAAqB;YAErB,sDAAM;;;qBAmCZ,uDAAS,SAAC,QAAQ;;AApBR,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,iFAAoC;;KAErC,CAAC;GACW,aAAa,CAuHzB;AAvHyB;;;;;;;;;;;;;ACjB1B;AAAe,uTAAwP,oBAAoB,g2DAAg2D,aAAa,qCAAqC,mBAAmB,4CAA4C,oBAAoB,2CAA2C,mBAAmB,sFAAsF,0BAA0B,gDAAgD,+BAA+B,yQAAyQ,E;;;;;;;;;;;;ACAtwF;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;ACApL;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, ToastController, IonList} from '@ionic/angular';\nimport { StorageService, Item } from 'src/app/services/storage.service';\nimport { ApiDjangoService } from '../services/api-django.service';\nimport {myID} from 'src/app/services/authentication.service';\nimport {currentGroup} from 'src/app/lab-group/lab-group.page';\nimport {groupName} from 'src/app/lab-group/lab-group.page';\n\nexport var protocolID:number;\n\n@Component({\n  selector: 'app-protocols',\n  templateUrl: './protocols.page.html',\n  styleUrls: ['./protocols.page.scss'],\n})\nexport class ProtocolsPage implements OnInit{\n\n  public userName : string = null;\n\n  protocolCredentials = { name: '', plateType: '', numSamples: '', posRate: ''};\n  \n  selectedItem?: Item;\n\n  infoAboutMe : any;\n\n  creatorID='';\n\n  items: Item[] = [];\n\n  displayList: Item[] = [];\n\n  newItem: Item = <Item>{};\n\n  public currentGroupName : string = null;\n\n  @ViewChild('mylist') mylist: IonList;\n\n  constructor(private storageService: StorageService, \n    private plt: Platform,\n    private ApiService: ApiDjangoService, \n    private toastController: ToastController, \n    private authService: AuthenticationService, \n    private router: Router) {\n    \n      this.currentGroupName = groupName;\n     \n    this.plt.ready().then(() => {\n      this.loadItems(\"name\");\n    });\n    \n  }\n\n  addProtocol(){\n    if (this.ApiService.networkConnected) {\n      this.ApiService.showLoading();\n              console.log(myID);\n\n              let protocolToCreate = {\n                \"name\": this.protocolCredentials.name,\n                \"creator_ID\": myID,\n                \"plate_type\": this.protocolCredentials.plateType,\n                \"num_samples\": this.protocolCredentials.numSamples,\n                \"suspected_pos_rate\": this.protocolCredentials.posRate,\n                \"active_status\": true,\n                \"lab_group\": currentGroup\n              }\n  \n              this.ApiService.createProtocol(protocolToCreate).subscribe((res) => {\n                if (res) {\n                  console.log(res)\n                  this.loadItems(\"name\");\n                }\n                else {\n                  this.ApiService.stopLoading();\n                  this.ApiService.showError(\"An error occured while creating a Protocol\")\n                }\n              });\n    }\n  }\n\n  sortByValue(property){\n    return function(a,b){  \n      if(a[property] > b[property])  \n         return 1;  \n      else if(a[property] < b[property])  \n         return -1;  \n  \n      return 0;  \n   } \n  }\n\n  \n  redirect() {\n    this.router.navigateByUrl(\"/experiments\");\n   }\n  \n\n  onSelect(item: Item): void {\n    this.selectedItem = item;\n    protocolID = item.id;\n    console.log(protocolID)\n\t  this.redirect();\n  }\n  \n  loadItems(value){\n    //console.log(currentGroup)\n    this.displayList = [];\n    this.ApiService.getProtocols().subscribe(items => {\n      for (let index in items[\"results\"]){\n        let currentItem = items[\"results\"][index][\"lab_group\"];\n\n\t\t \t  if(currentItem == currentGroup){\n          let userId = items[\"results\"][index][\"creator_ID\"];\n        //console.log(userId)\n        this.ApiService.getinfoUser(userId).subscribe((listUser) => { \n          if(listUser){\n            //console.log(listUser.username)\n            //this.userName = listUser.username;\n            items[\"results\"][index][\"creator_ID\"] = listUser.username;\n            console.log(items[\"results\"][index][\"creator_ID\"])\n          }\n        });\n          this.displayList.push(items[\"results\"][index]);\n          this.displayList.sort(this.sortByValue(value));\n        }\n    }\n    //console.log(this.displayList)\n    });\n  }\n\n  ngOnInit(){\n\n  }\n\n}\n","export default \"  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>Protocols</ion-title>\\n    </ion-toolbar>\\n        <h1> Current Group: {{ currentGroupName }}</h1>\\n  </ion-header>\\n\\n  <ion-content>\\n    <form (ngSubmit)=\\\"addProtocol()\\\" #registerForm=\\\"ngForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Samples</ion-label>\\n        <ion-input type=\\\"number\\\" name=\\\"numSamples\\\" [(ngModel)]=\\\"protocolCredentials.numSamples\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Well Size(1=96, 2=384)</ion-label>\\n        <ion-input type=\\\"number\\\" name=\\\"posRate\\\" [(ngModel)]=\\\"protocolCredentials.plateType\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Name</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"protocolCredentials.name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Positivity %</ion-label>\\n        <ion-input type=\\\"number\\\" name=\\\"posRate\\\" [(ngModel)]=\\\"protocolCredentials.posRate\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-button expand=\\\"full\\\" type=\\\"submit\\\" >Add Protocol!</ion-button>\\n    </form>\\n\\n    <ion-item>\\n      <ion-label>Sort By</ion-label>\\n      <ion-select  [(ngModel)]= \\\"sortBy\\\" (ionChange) = \\\"loadItems(sortBy)\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\n        <ion-select-option   value=\\\"name\\\">Name</ion-select-option>\\n        <ion-select-option   value=\\\"num_samples\\\">Sample Number</ion-select-option>\\n        <ion-select-option   value=\\\"date_used\\\">Date Used</ion-select-option>\\n        <ion-select-option  value=\\\"plate_type\\\">Plate Type</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    \\n    <ion-list #mylist>\\n\\n      <ion-list-header>\\n        <ion-label>My Protocols</ion-label>\\n      </ion-list-header>\\n\\n      <ion-item-sliding *ngFor=\\\"let item of displayList\\\" (click)=\\\"onSelect(item)\\\">\\n        <ion-item>\\n          <ion-label text-wrap>\\n            <h3>Name: {{ item.name }}</h3>\\n            <h3>Plate Type: {{ item.plate_type }}</h3>\\n            <h3>Number of Samples: {{ item.num_samples }}</h3>\\n            <h3>Creator Username: {{ item.creator_ID }}</h3>\\n            <ion-text color=\\\"secondary\\\">\\n              <p> Positive Rate: {{ item.suspected_pos_rate}}</p>\\n            </ion-text>\\n            <p>{{ item.modified | date:'short'}}</p>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"secondary\\\">Delete</ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n\\n    </ion-list>\\n\\n\\n  </ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm90b2NvbHMucGFnZS5zY3NzIn0= */\";","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":"webpack:///"}