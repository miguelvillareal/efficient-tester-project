{"version":3,"sources":["./src/app/experiments/experiments.page.scss","./src/app/experiments/experiments.page.ts","./src/app/experiments/experiments.module.ts","./src/app/experiments/experiments.page.html","./src/app/experiments/experiments-routing.module.ts"],"names":[],"mappings":"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","file":"experiments-experiments-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmltZW50cy5wYWdlLnNjc3MifQ== */\";","import { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, ToastController, IonList} from '@ionic/angular';\nimport { StorageService, Item } from 'src/app/services/storage.service';\nimport { ApiDjangoService } from '../services/api-django.service';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport {myID} from 'src/app/services/authentication.service';\nimport {protocolID} from 'src/app/protocols/protocols.page';\n\n@Component({\n  selector: 'app-experiments',\n  templateUrl: './experiments.page.html',\n  styleUrls: ['./experiments.page.scss'],\n})\nexport class ExperimentsPage implements OnInit {\n  expCredentials = { name: ''};\n  \n  selectedItem?: Item;\n\n  infoAboutMe : any;\n\n  items: Item[] = [];\n\n  displayList: Item[] = [];\n\n  displayListTwo: Item[] = [];\n\n  newItem: Item = <Item>{};\n\n  @ViewChild('mylist') mylist: IonList;\n\n  constructor(private storageService: StorageService, \n    private plt: Platform,\n    private ApiService: ApiDjangoService, \n    private toastController: ToastController, \n    private authService: AuthenticationService, \n    private router: Router,\n    private inAppBrowser: InAppBrowser) {\n     \n    this.plt.ready().then(() => {\n      this.loadItems(\"step_num\");\n    });\n    \n  }\n\n  sortByValue(property){\n    return function(a,b){  \n      if(a[property] > b[property])  \n         return 1;  \n      else if(a[property] < b[property])  \n         return -1;  \n  \n      return 0;  \n   } \n  }\n\n  addExperiment(){\n    if (this.ApiService.networkConnected) {\n      this.ApiService.showLoading();\n              console.log(myID);\n              let experimentToCreate = {\n                \"name\":this.expCredentials.name,\n                \"user_notes\": '{}',\n                \"step_num\": 1,\n                \"protocol_used\": protocolID,\n                \"current_interaction\": '{}'\n              }\n\n              this.ApiService.createExperiment(experimentToCreate).subscribe((res) => {\n                if (res) {\n                  console.log(res)\n                  this.loadItems(\"step_num\");\n                }\n                else {\n                  this.ApiService.stopLoading();\n                  this.ApiService.showError(\"An error occured while creating a Experiment\")\n                }\n              });\n\n            //}\n            //else{\n            //  this.ApiService.showError(\"A Protocol already exists for this name and positive rate!\");\n            //}\n          //}\n          //else {\n            \n          //  this.ApiService.showError(\"An error occured while registering\")\n         \n          //}\n      //});\n    }\n  }\n  refreshPage(){\n    this.loadItems(\"step_num\");\n  }\n  \n  redirect(item) {\n    this.inAppBrowser.create(\"http://54.90.175.110:8000/imageInteraction/?id=\" + item.protocol_used + \"&exp=\" +item.id + \"&userid=\" + myID);\n   }\n  \n  onSelect(item: Item): void {\n    this.selectedItem = item;\n    console.log(item)\n\t  this.redirect(item);\n  }\n\n  loadItems(value){\n    this.displayList = [];\n    this.ApiService.getExperiments().subscribe(items => {\n      for (let index in items[\"results\"]){\n        let currentItem = items[\"results\"][index][\"protocol_used\"];\n        let loadedItem = items[\"results\"][index][\"completed_status\"];\n\t\t \t  if(currentItem == protocolID){\n          console.log(currentItem)\n          if(loadedItem == \"False\"){\n            this.displayList.push(items[\"results\"][index]);\n            this.displayList.sort(this.sortByValue(value));\n          }\n          else{\n            this.displayListTwo.push(items[\"results\"][index]);\n            this.displayListTwo.sort(this.sortByValue(value));\n          }\n        }\n    }\n    console.log(this.displayList)\n\t  //console.log(items[\"results\"][3][\"protocol_used\"]);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExperimentsPageRoutingModule } from './experiments-routing.module';\n\nimport { ExperimentsPage } from './experiments.page';\n\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExperimentsPageRoutingModule\n  ],\n  declarations: [ExperimentsPage]\n})\nexport class ExperimentsPageModule {}\n","export default \"  <ion-header>\\n    <ion-toolbar>\\n      <ion-title>Experiments</ion-title>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content>\\n    <form (ngSubmit)=\\\"addExperiment()\\\" #registerForm=\\\"ngForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Name</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"expCredentials.name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-button expand=\\\"full\\\" type=\\\"submit\\\" >Create experiment!</ion-button>\\n    </form>\\n    <button (click)=\\\"refreshPage()\\\">Refresh Page(Click after save or done with experiment)</button>\\n    <ion-item>\\n      <ion-label>Sort By</ion-label>\\n      <ion-select  [(ngModel)]= \\\"sortBy\\\" (ionChange) = \\\"loadItems(sortBy)\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\n        <ion-select-option   value=\\\"name\\\">Name</ion-select-option>\\n        <ion-select-option   value=\\\"step_num\\\">Step Number</ion-select-option>\\n        <ion-select-option   value=\\\"date_last_accessed\\\">Date Last Used</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-list #mylist>\\n\\n      <ion-list-header>\\n        <ion-label>My Experiments</ion-label>\\n      </ion-list-header>\\n\\n      <ion-item-sliding *ngFor=\\\"let item of displayList\\\" (click)=\\\"onSelect(item)\\\">\\n\\n        <ion-item>\\n          <ion-label text-wrap>\\n            <h3>Name: {{ item.name }}</h3>\\n            <h3>Step Number: {{ item.step_num }}</h3>\\n            <h3>Protocol ID Used: {{ item.protocol_used }}</h3>\\n            <ion-text color=\\\"secondary\\\">\\n             <!-- <p>Notes: {{ item.user_notes}}</p>-->\\n            </ion-text>\\n            <p>{{ item.modified | date:'short'}}</p>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"secondary\\\" (click)=\\\"deleteItem(item)\\\">Delete</ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n\\n      <h3>\\n        Completed Experiments\\n      </h3>\\n\\n      <ion-item-sliding *ngFor=\\\"let item of displayListTwo\\\" (click)=\\\"onSelect(item)\\\">\\n\\n        <ion-item>\\n          <ion-label text-wrap>\\n            <h3>Step Number: {{ item.step_num }}</h3>\\n            <h3>Protocol ID Used: {{ item.protocol_used }}</h3>\\n            <ion-text color=\\\"secondary\\\">\\n              <!-- <p>Notes: {{ item.user_notes}}</p>-->\\n            </ion-text>\\n            <p>{{ item.modified | date:'short'}}</p>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option color=\\\"secondary\\\" (click)=\\\"deleteItem(item)\\\">Delete</ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n\\n    </ion-list>\\n\\n  </ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExperimentsPage } from './experiments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExperimentsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExperimentsPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}