{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.page.scss"],"names":["LoginPage","authService","alertController","router","apiService","loadingController","registerCredentials","email","password","create","header","message","inputs","name","type","buttons","text","role","cssClass","handler","console","log","alertData","showLoading","then","sendResetPasswordLink","subscribe","stopLoading","showError","alert","present","networkConnected","userToLogin","login","listUsers","navigateByUrl","showNoNetwork","selector","template","LoginPageModule","imports","declarations","routes","path","component","LoginPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport {ApiDjangoService} from '../services/api-django.service'\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  registerCredentials = { email: '', password: '' };\n \n  constructor(\n    private authService: AuthenticationService,\n    private alertController: AlertController,\n    private router: Router,\n    public apiService: ApiDjangoService,\n    private loadingController: LoadingController\n  ) {}\n\n  async  forgotPassword()  { \n    const alert = await this.alertController.create({\n     header:\"Please enter your email\",\n     message:\"We will send you a password reset link\",\n     inputs: [\n       {\n         name: 'email',\n         type: 'text'\n       }],    \n      buttons: [\n           {\n             text: 'Cancel',\n             role: 'cancel',\n             cssClass: 'secondary',\n             handler: () => {\n               console.log('Confirm Cancel');\n             }\n           }, {\n             text: 'Ok',\n             handler: (alertData) => { //takes the data \n               console.log(alertData.email);\n               if (alertData.email){\n                 //this.apiService.sendResetPasswordLink(alertData.email)\n\n                 this.apiService.showLoading().then(()=>{\n                  this.apiService.sendResetPasswordLink(alertData.email).subscribe(()=>{\n                    this.apiService.stopLoading()\n                 })\n               })\n               }\n               else{\n                 //Display error message\n                 this.apiService.showError(\"Something went wrong\");\n               }\n           }\n           }\n         ]\n });\n await alert.present();\n } \n \n  ngOnInit() {}\n \n  async login() {\n\n    if(this.apiService.networkConnected){\n      this.apiService.showLoading();\n      //let queryPath = \"?email=\" + this.registerCredentials.email + \"&password=\" + this.registerCredentials.password;\n      let userToLogin = {\n        \"email\": this.registerCredentials.email,\n        \"password\": this.registerCredentials.password,\n      }\n      this.authService.login(userToLogin).then((listUsers) => {\n        this.apiService.stopLoading();\n        if (listUsers) {\n          //console.log(\"Find \" + JSON.stringify(listUsers));\n          this.router.navigateByUrl('/main');\n        }\n        else {\n          this.apiService.stopLoading();\n          this.apiService.showError(\"Wrong login or password.\");\n\n        }\n      })\n    }\n    else {\n      this.apiService.showNoNetwork();\n    }\n\n  \n  }\n}","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Log In</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <form (ngSubmit)=\\\"login()\\\" #registerForm=\\\"ngForm\\\">\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" name=\\\"email\\\"  [(ngModel)]=\\\"registerCredentials.email\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerCredentials.password\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\">Sign In</ion-button>\\n        <a (click)=\\\"forgotPassword()\\\" class=\\\"small-text\\\">Forgot Password?</a>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";"]}